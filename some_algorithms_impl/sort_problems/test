#ifndef TEST_HPP
#define TEST_HPP
#include<ctime>
/*
    函数功能：判断记录是否“有序”
*/
template<typename T,typename length_type = unsigned int,typename compare=less_equal<T>>
bool is_correct(T*& arr,length_type n,const compare& comp=compare())
{
    for(int i=0;i<n-1;i++)
    {
        if(!(comp(arr[i],arr[i+1])))
        {
            cout<<"算法错误！\n";
            cout<<"arr["<<i<<"]="<<arr[i]<<'\n';
            cout<<"arr["<<i+1<<"]="<<arr[i+1]<<'\n';
            return false;
        }
    }
    return true;
}
//重新加载记录内容
template<typename T,typename length_type = unsigned int>
void upload(T*& arr,length_type n)
{
    srand(time(NULL));
    for(int i=0;i<n;i++)
    {
        arr[i]=rand();
    }
}
#endif 